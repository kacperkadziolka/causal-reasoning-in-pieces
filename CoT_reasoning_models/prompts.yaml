reasoning_prompt: |
  Task: Based on the given Premise, apply the PC (Peter-Clark) algorithm to identify a causal undirected skeleton from the correlations and independence statements.

  Key Principles:
  - Initially, assume all correlated variables are connected
  - An edge X--Y should be removed if ANY independence statement shows X and Y are independent (marginally or conditionally)
  - Keep all edges unless contradicted by an explicit independence statement
  - The final skeleton should reflect all independence relationships in the data

  Your analysis should be thorough but focused on removing edges based on independence statements.

  Required Output Format:
  After completing your analysis, provide your final answer in this exact JSON format:

  ```json
  {{
    "nodes": ["list", "of", "nodes"],
    "edges": [
      ["Node1", "Node2"],
      ["Node2", "Node3"]
    ]
  }}
  ```

  Premise: {premise}
  
reasoning_prompt_vstructure: |
  Task: You are given a causal skeleton (an undirected graph produced by the PC algorithm) and a Premise that contains independence statements. Your job is to perform two distinct steps:
  
  1. Extraction of Independence Statements:
    - Parse the Premise: Identify and extract all independence statements.
    - Representation: For each statement that indicates that a pair of variables is independent (optionally given a conditioning set), represent it as an entry in a dictionary. Use a key that is a sorted pair of variables (e.g., "A,C") and set its value as a list of the conditioning variables (if any).
  2. Identification of V-Structures (Colliders):
    - Candidate Identification: Systematically consider every triple of nodes (X,Z,Y) from the skeleton where:
      - There are edges X−−Z and Y−−Z in the skeleton.
      - There is no direct edge between X and Y (i.e., they are non-adjacent).
    - Verification via Separation Test:
      For each candidate triple, check the separation (independence) information:
      - Valid V-Structure: Include [X,Z,Y] only if for the pair (X,Y) (as found in the independence statements) the corresponding separation set does not contain Z.
      - Systematic Check: Ensure that every candidate triple is evaluated using the criteria of non-adjacency, common neighbor, and the separation test to avoid false positives (including a Z that appears in the separation set) and false negatives (omitting any valid candidate).
  
  Required Output Format
  After completing your analysis, provide your final answer in this exact JSON format:
  ```json
  {{
    "separation_sets": {{
      "A,C": ["B"],
      "A,D": [...],
      ...
    }},
    "v_structures": [
      ["X", "Z", "Y"],
      ["X2", "Z2", "Y2"],
      ...
    ]
  }}
  ```
  
  Inputs
  Premise: {premise}
  Casual skeleton:
  ```json
  {{
    "nodes": {nodes},
    "edges": {edges}
  }}
  ```

reasoning_prompt_meek: |
  Task: Orient edges in the undirected graph skeleton to create a maximally oriented partial directed acyclic graph (PDAG) consistent with the v-structures.

  Context:
  You're given an undirected skeleton and known v-structures. Your goal is to determine which additional edges can be oriented while maintaining consistency with the equivalence class of DAGs represented by this information.
  
  The Meek rules provide logical constraints that must be satisfied in any valid PDAG. Think about how edge orientations propagate through the graph based on these logical constraints until no further orientations are possible.


  Required Output Format:
  After completing your analysis, provide your final answer in this exact JSON format:

  ```json
  {{
    "directed_edges": [
      ["X", "Y"],  // represents X→Y
      ["A", "B"]   // represents A→B
    ]
  }}
  
  Undirected Skeleton: {skeleton}
  
  V-Structures: {v_structures}

reasoning_prompt_meek_v2: |
  You are provided with the following inputs:
  - Premise: A set of statements containing observed correlations along with both marginal and conditional independence relationships.
  - Causal Undirected Skeleton: An undirected graph representing the associations between variables, derived from the premise.
  - Identified V-Structures: A set of collider configurations (v-structures) that have been reliably detected in earlier steps.
  
  Task: Your goal is to orient as many undirected edges in the causal skeleton as possible by applying Meek’s orientation rules while ensuring:
  1. Cycle Avoidance: No directed cycles are introduced.
  2. Preservation of V-Structures: The identified v-structures are maintained without introducing conflicting new ones.
  3. Consistency with Independence Statements: All orientation decisions must be consistent with both marginal and conditional independence statements from the premise.
  4. Maximal Orientation: All orientations must be justified by the rules and consistent with the provided constraints.
  
  Meek’s Orientation Rules:`
  - Rule R1: If there exists an edge A → B and an undirected edge B – C, where A and C are not directly connected, then orient B – C as B → C.
  - Rule R2: If there exists an undirected edge A – B and a chain A → C → B such that there is no direct edge between A and B by an arrow, then orient A – B as A → B.
  - Rule R3: If there exist two chains A – B → C and A – D → C with B and D not adjacent, then orient A – B and A – D as A → B and A → D, respectively.
  - Rule R4: If there is an undirected edge A – B and there exists a directed path from A to B, orient the edge as A → B to avoid creating cycles.
  
  For each edge orientation, provide a step-by-step explanation that includes:
  - The step number.
  - The rule applied.
  - The specific edge oriented.
  - A brief explanation of why the rule applies and confirmation that no conflicts (cycles, v-structure violations, or contradictions with any independence statements) are introduced.
  
  Required Output Format
  After completing your analysis, provide your final answer in this exact JSON format:
  {{
    "final_graph": {{
      "directed_edges": [
        {{
          "from": "Node1",
          "to": "Node2"
        }},
        {{
          "from": "Node2",
          "to": "Node3"
        }}
      ],
      "undirected_edges": [
        ("Node3", "Node4"),
        ("Node5", "Node6")
      ]
    }},
    "orientation_steps": [
      {{
        "step": 1,
        "rule_applied": "R1",
        "edge_oriented": {{
          "from": "Node2",
          "to": "Node3"
        }},
        "explanation": "Applied Rule R1 because there exists an edge Node1 → Node2 and an undirected edge Node2 – Node3, with Node1 not adjacent to Node3. This orientation is consistent with the independence statements."
      }},
      {{
        "step": 2,
        "rule_applied": "R2",
        "edge_oriented": {{
          "from": "Node4",
          "to": "Node5"
        }},
        "explanation": "Applied Rule R2 due to the chain Node4 → Node6 → Node5, with no direct edge between Node4 and Node5, ensuring no conflict with the provided independence statements."
      }}
    ]
  }}
  
  Inputs
  Premise: {premise}
  V-Structures: {v_structures}
  Casual skeleton:
  ```json
  {{
    "nodes": {nodes},
    "edges": {edges}
  }}
  ```

reasoning_prompt_single_stage: |
  You are provided with the following inputs:
  - Premise: A set of statements summarizing observed statistical relationships among a set of variables. These include observed correlations along with both marginal and conditional independence relationships that form the evidence for the underlying causal structure.
  - Hypothesis: A statement positing a specific causal claim regarding the relationships among the variables.

  Task: Use the PC (Peter-Clark) algorithm to evaluate whether the evidence in the premise supports the causal claim stated in the hypothesis.  
  
  Key Principles
  1. Causal Skeleton Extraction:
    - Step: Start with a fully connected undirected graph among all variables with observed correlations. Remove any edge if any independence statement (marginal or conditional) indicates that the two variables are independent.
    - Principle: Retain an edge only if no independence evidence contradicts the observed correlation.
  2. Collider (V-Structure) Identification:
    - Step: For every triple (X, Z, Y) in the skeleton where X and Y are not directly connected but both connect to Z, confirm a v-structure only if the independence information shows that conditioning on Z would induce a dependency between X and Y that is not present marginally.  
    - Principle: Mark a collider only if Z is not part of the conditioning set that renders X and Y independent.
  3. Edge Orientation via Meek Rules
    - Step: Apply all four Meek rules systematically to orient as many undirected edges as possible, ensuring that:
      - Rule R1: If there is an edge A → B and an undirected edge B – C, with A and C not adjacent, orient B – C as B → C.
      - Rule R2: If there is an undirected edge A – B and a chain A → C → B (with no direct A–B arrow), orient A – B as A → B.
      - Rule R3: If there are two chains A – B → C and A – D → C with B and D not adjacent, orient A – B and A – D as A → B and A → D, respectively.
      - Rule R4: If there is an undirected edge A – B and a directed path exists from A to B, orient the edge as A → B to prevent cycles.
   - Principle: Only orient an edge when the statistical evidence and existing orientations (including v-structures) unambiguously support a specific direction, ensuring no cycles or conflicts arise.
  4. Hypothesis Evaluation
    - Step: Evaluate the final directed graph to decide if it supports the causal claim:
      - For a direct causal claim (e.g., "C directly causes F"), check that the graph contains a direct edge from C to F.
      - For an indirect causal claim (e.g., "C is a cause for F, but not a direct one"), verify that there is a directed path from C to F, but no direct edge from C to F.
      - For a collider claim (e.g., "There exists at least one collider of A and C"), confirm that there exists a variable Z such that A → Z ← C is present.
      - For a confounder claim (e.g., "There exists at least one confounder of A and B"), check for a variable Z that directly causes both A and B (i.e., Z → A and Z → B).
   - Principle: The hypothesis is supported (true) only if the final graph clearly reflects the causal relationship as claimed without contradicting the independence evidence. Otherwise, it is not supported (false).
  
  Required Output Format:
  After completing your analysis, provide your final answer only for the hypothesis as a boolean value (either true or false) in this exact JSON format:
  
  ```json
  {{
    "hypothesis_answer": true/false
  }}
  ```
  
  Premise: {premise}
  Hypothesis: {hypothesis}
